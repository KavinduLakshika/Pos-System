-- MySQL Script generated by MySQL Workbench
-- 09/26/24 10:42:04
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema posSystem
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema posSystem
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `posSystem` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `posSystem` ;

-- -----------------------------------------------------
-- Table `posSystem`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`customer` (
  `cusId` INT NOT NULL AUTO_INCREMENT,
  `cusName` VARCHAR(255) NULL,
  `cusAddress` VARCHAR(255) NULL,
  `cusPhone` VARCHAR(255) NULL,
  `cusEmail` VARCHAR(255) NULL,
  `cusNIC` VARCHAR(45) NULL,
  `cusPoints` VARCHAR(45) NULL,
  `cusStatus` VARCHAR(45) NULL,
  PRIMARY KEY (`cusId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`category` (
  `categoryId` INT NOT NULL AUTO_INCREMENT,
  `categoryName` VARCHAR(255) NOT NULL,
  `categoryStatus` VARCHAR(45) NULL,
  PRIMARY KEY (`categoryId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`products`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`products` (
  `productId` INT NOT NULL AUTO_INCREMENT,
  `productName` VARCHAR(255) NOT NULL,
  `productCode` VARCHAR(45) NOT NULL,
  `productWeight` VARCHAR(45) NOT NULL,
  `productBuyingPrice` VARCHAR(45) NOT NULL,
  `productSellingPrice` VARCHAR(255) NOT NULL,
  `productWarranty` DATE NOT NULL,
  `productQty` VARCHAR(45) NOT NULL,
  `productStatus` VARCHAR(45) NOT NULL,
  `category_categoryId` INT NOT NULL,
  PRIMARY KEY (`productId`, `category_categoryId`),
  INDEX `fk_products_category_idx` (`category_categoryId` ASC),
  CONSTRAINT `fk_products_category`
    FOREIGN KEY (`category_categoryId`)
    REFERENCES `posSystem`.`category` (`categoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`stock` (
  `stockId` INT NOT NULL AUTO_INCREMENT,
  `stockName` VARCHAR(255) NOT NULL,
  `stockQty` VARCHAR(45) NOT NULL,
  `stockdate` DATE NOT NULL,
  `stockStatus` VARCHAR(45) NOT NULL,
  `supplier_supplierId` INT NOT NULL,
  PRIMARY KEY (`stockId`, `supplier_supplierId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`invoice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`invoice` (
  `invoiceId` INT NOT NULL AUTO_INCREMENT,
  `invoiceDate` DATETIME NOT NULL,
  `invoiceAmount` VARCHAR(255) NOT NULL,
  `Discount` VARCHAR(45) NOT NULL,
  `products_productId` INT NOT NULL,
  `stock_stockId` INT NOT NULL,
  PRIMARY KEY (`invoiceId`, `products_productId`, `stock_stockId`),
  INDEX `fk_invoice_products1_idx` (`products_productId` ASC),
  INDEX `fk_invoice_stock1_idx` (`stock_stockId` ASC),
  CONSTRAINT `fk_invoice_products1`
    FOREIGN KEY (`products_productId`)
    REFERENCES `posSystem`.`products` (`productId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_invoice_stock1`
    FOREIGN KEY (`stock_stockId`)
    REFERENCES `posSystem`.`stock` (`stockId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`transaction` (
  `transactionId` INT NOT NULL AUTO_INCREMENT,
  `transactionType` VARCHAR(255) NOT NULL,
  `price` VARCHAR(100) NOT NULL,
  `dateTime` DATETIME NOT NULL,
  `customer_cusId` INT NOT NULL,
  `invoice_invoiceId` INT NOT NULL,
  PRIMARY KEY (`transactionId`, `customer_cusId`, `invoice_invoiceId`),
  INDEX `fk_transaction_customer1_idx` (`customer_cusId` ASC),
  INDEX `fk_transaction_invoice1_idx` (`invoice_invoiceId` ASC),
  CONSTRAINT `fk_transaction_customer1`
    FOREIGN KEY (`customer_cusId`)
    REFERENCES `posSystem`.`customer` (`cusId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_invoice1`
    FOREIGN KEY (`invoice_invoiceId`)
    REFERENCES `posSystem`.`invoice` (`invoiceId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`supplier` (
  `supplierId` INT NOT NULL AUTO_INCREMENT,
  `supplierName` VARCHAR(45) NOT NULL,
  `supplierAddress` VARCHAR(255) NOT NULL,
  `supplierNic` VARCHAR(45) NOT NULL,
  `supplierEmail` VARCHAR(45) NOT NULL,
  `supplierTP` VARCHAR(45) NOT NULL,
  `supplierStatus` VARCHAR(45) NULL,
  PRIMARY KEY (`supplierId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`return`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`return` (
  `returnId` INT NOT NULL AUTO_INCREMENT,
  `returnType` VARCHAR(45) NOT NULL,
  `returnDate` DATETIME NOT NULL,
  `invoice_invoiceId` INT NOT NULL,
  `invoice_products_productId` INT NOT NULL,
  `invoice_products_return_returnId` INT NOT NULL,
  `products_productId` INT NOT NULL,
  `products_category_categoryId` INT NOT NULL,
  `customer_cusId` INT NOT NULL,
  `invoice_invoiceId1` INT NOT NULL,
  `invoice_products_productId1` INT NOT NULL,
  `invoice_products_return_returnId1` INT NOT NULL,
  `invoice_stock_stockId` INT NOT NULL,
  PRIMARY KEY (`returnId`, `invoice_invoiceId`, `invoice_products_productId`, `invoice_products_return_returnId`, `products_productId`, `products_category_categoryId`, `customer_cusId`, `invoice_invoiceId1`, `invoice_products_productId1`, `invoice_products_return_returnId1`, `invoice_stock_stockId`),
  INDEX `fk_return_products1_idx` (`products_productId` ASC, `products_category_categoryId` ASC),
  INDEX `fk_return_customer1_idx` (`customer_cusId` ASC),
  INDEX `fk_return_invoice1_idx` (`invoice_invoiceId1` ASC, `invoice_products_productId1` ASC, `invoice_products_return_returnId1` ASC, `invoice_stock_stockId` ASC),
  CONSTRAINT `fk_return_products1`
    FOREIGN KEY (`products_productId` , `products_category_categoryId`)
    REFERENCES `posSystem`.`products` (`productId` , `category_categoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_return_customer1`
    FOREIGN KEY (`customer_cusId`)
    REFERENCES `posSystem`.`customer` (`cusId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_return_invoice1`
    FOREIGN KEY (`invoice_invoiceId1` , `invoice_products_productId1` , `invoice_stock_stockId`)
    REFERENCES `posSystem`.`invoice` (`invoiceId` , `products_productId` , `stock_stockId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`user` (
  `userId` INT NOT NULL AUTO_INCREMENT,
  `userName` VARCHAR(45) NOT NULL,
  `userPassword` VARCHAR(255) NOT NULL,
  `userType` VARCHAR(45) NOT NULL,
  `userEmail` VARCHAR(45) NOT NULL,
  `userNIC` VARCHAR(45) NOT NULL,
  `userTP` VARCHAR(45) NOT NULL,
  `userAddress` VARCHAR(255) NOT NULL,
  `userStatus` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`userId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`products_has_stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`products_has_stock` (
  `products_productId` INT NOT NULL,
  `products_category_categoryId` INT NOT NULL,
  `stock_stockId` INT NOT NULL,
  `stock_supplier_supplierId` INT NOT NULL,
  PRIMARY KEY (`products_productId`, `products_category_categoryId`, `stock_stockId`, `stock_supplier_supplierId`),
  INDEX `fk_products_has_stock_stock1_idx` (`stock_stockId` ASC, `stock_supplier_supplierId` ASC),
  INDEX `fk_products_has_stock_products1_idx` (`products_productId` ASC, `products_category_categoryId` ASC),
  CONSTRAINT `fk_products_has_stock_products1`
    FOREIGN KEY (`products_productId` , `products_category_categoryId`)
    REFERENCES `posSystem`.`products` (`productId` , `category_categoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_products_has_stock_stock1`
    FOREIGN KEY (`stock_stockId` , `stock_supplier_supplierId`)
    REFERENCES `posSystem`.`stock` (`stockId` , `supplier_supplierId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `posSystem`.`supplier_has_stock`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `posSystem`.`supplier_has_stock` (
  `supplier_supplierId` INT NOT NULL,
  `stock_stockId` INT NOT NULL,
  `stock_supplier_supplierId` INT NOT NULL,
  PRIMARY KEY (`supplier_supplierId`, `stock_stockId`, `stock_supplier_supplierId`),
  INDEX `fk_supplier_has_stock_stock1_idx` (`stock_stockId` ASC, `stock_supplier_supplierId` ASC),
  INDEX `fk_supplier_has_stock_supplier1_idx` (`supplier_supplierId` ASC),
  CONSTRAINT `fk_supplier_has_stock_supplier1`
    FOREIGN KEY (`supplier_supplierId`)
    REFERENCES `posSystem`.`supplier` (`supplierId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_supplier_has_stock_stock1`
    FOREIGN KEY (`stock_stockId` , `stock_supplier_supplierId`)
    REFERENCES `posSystem`.`stock` (`stockId` , `supplier_supplierId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
